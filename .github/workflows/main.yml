name: Build Executables

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macOS-latest]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Install PortAudio dependency for Ubuntu
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: sudo apt-get install portaudio19-dev

      - name: Install PortAudio dependency for Windows
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          pip install pipwin
          pipwin install pyaudio
          
      - name: Install Portaudio dependency for macOS
        if: ${{ matrix.os == 'macOS-latest' }}
        run: |
          brew install portaudio
          pip install pyaudio


      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build executable for Windows
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          pyinstaller --onefile --windowed --add-data "assets;assets" --icon "assets/toontuber app icon.ico" --name "ToonTuber-Player v_" toontuber.py
        shell: bash
        working-directory: ${{ github.workspace }}

      - name: Build executable for macOS or Ubuntu
        if: ${{ matrix.os != 'windows-latest' }}
        run: |
          pyinstaller --onefile --windowed --add-data "assets:assets" --icon "assets/toontuber app icon.ico" --name "ToonTuber-Player v_" toontuber.py
        shell: bash
        working-directory: ${{ github.workspace }}
        
        
      
      - name: Upload executable
        uses: actions/upload-artifact@v2
        with:
          name: toontuber-${{ matrix.os }}
          path: ${{ matrix.os == 'windows-latest' && 'dist\ToonTuber-Player v_.exe' || 'dist/ToonTuber-Player v_' }}
